{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","user","setUser","login","setLogin","placeholder","setPlaceholder","className","onSubmit","e","preventDefault","today","Date","getMonth","getDate","handleLogin","handleRejection","type","value","onChange","target","toUpperCase","slice","handleInputChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0KAiFeA,MA/Ef,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEaF,oBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,OAGyBJ,mBAAS,cAHlC,mBAGNK,EAHM,KAGOC,EAHP,KAwEb,OACE,qBAAKC,UAAU,WAAf,UAjBa,IAAVJ,EAEC,qBAAKI,UAAU,WAAf,SACE,uBAAMC,SAAU,SAACC,GAAD,MAAgB,KAATR,EAlDX,SAACQ,GAGnB,OAFAA,EAAEC,iBAEMT,GACN,IAAK,UACHC,EAAQ,OACR,MACF,IAAK,SAGL,IAAK,QACHA,EAAQ,OACR,MACF,IAAK,QAGL,IAAK,OACHA,EAAQ,iDACR,MACF,IAAK,OACHA,EAAQ,QACR,MACF,IAAK,SACHA,EAAQ,UACR,MACF,IAAK,QACHA,EAAQ,aACR,MACF,QACEA,EAAQD,GAGZ,IAAMU,EAAQ,IAAIC,KAEfD,EAAME,WAAa,IAAM,IAA0B,KAApBF,EAAMG,UACtCZ,EAAQ,0BAERE,GAAS,GAagCW,CAAYN,GATjC,SAACA,GACvBA,EAAEC,iBACFJ,EAAe,wBAO6CU,CAAgBP,IAAtE,UACE,uBAAOF,UAAU,aAAaU,KAAK,OAAOZ,YAAaA,EAAaa,MAAOjB,EAAMkB,SAAU,SAACV,GAAD,OAvD3E,SAACA,GACvBA,EAAEW,OAAOF,MAAQhB,EAAQO,EAAEW,OAAOF,MAAM,GAAGG,cAAgBZ,EAAEW,OAAOF,MAAMI,MAAM,IAAMpB,EAAQO,EAAEW,OAAOF,OAsDCK,CAAkBd,MACpH,wBAAQF,UAAU,kBAAkBU,KAAK,SAAzC,yBAMJ,qBAAIV,UAAU,aAAd,6BAA4CN,EAA5C,UCzDOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fbaa7ee9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nfunction App() {\n  const [user, setUser] = useState('');\n  const [login, setLogin] = useState(false);\n  const [placeholder, setPlaceholder] = useState('enter name')\n\n  const handleInputChange = (e) => {\n      e.target.value ? setUser(e.target.value[0].toUpperCase() + e.target.value.slice(1)) : setUser(e.target.value);\n  }\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    switch (user){\n      case \"Melissa\": \n        setUser(\"Mom\")\n        break;\n      case \"Randal\": \n        setUser(\"Dad\")\n        break;\n      case \"Randy\": \n        setUser(\"Dad\")\n        break;\n      case \"Jacob\": \n        setUser(\"Girbin Zambeeze la Ploop the Rhinocerus Pinch\")\n        break;\n      case \"Jake\": \n        setUser(\"Girbin Zambeeze la Ploop the Rhinocerus Pinch\")\n        break;\n      case \"Joey\": \n        setUser(\"Josh\")\n        break;\n      case \"Joseph\": \n        setUser(\"Joshua\")\n        break;\n      case \"Ciara\":\n        setUser(\"now Brabe\")\n        break;\n      default:\n        setUser(user);\n    };\n\n    const today = new Date();\n\n    if(today.getMonth() + 1 !== 12 || today.getDate() !== 25){\n      setUser(\"It's not Christmas yet\");\n    } else {\n      setLogin(true)\n    }\n  }\n\n  const handleRejection = (e) => {\n    e.preventDefault()\n    setPlaceholder(\"I said 'enter name'!\")\n  }\n\n  const checkLogin = () => {\n    if(login === false){\n      return(\n        <div className=\"form_div\">\n          <form onSubmit={(e) => user !== '' ? handleLogin(e) : handleRejection(e)}>\n            <input className=\"name_input\" type=\"text\" placeholder={placeholder} value={user} onChange={(e) => handleInputChange(e)}></input>\n            <button className=\"submit_name_btn\" type=\"submit\">Submit</button>\n          </form>\n        </div>\n      )\n    } else {\n      return(\n        <h1 className=\"merry_xmas\">Merry Christmas {user}!</h1>\n      )\n    }\n  }\n\n  return (\n    <div className=\"App snow\">\n      {checkLogin()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}